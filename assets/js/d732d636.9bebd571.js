"use strict";(self.webpackChunkdocusaurus_code=self.webpackChunkdocusaurus_code||[]).push([[3624],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=o,f=c["".concat(s,".").concat(m)]||c[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),o=n(34334);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(83117),o=n(67294),r=n(34334),i=n(72389),l=n(67392),s=n(7094),p=n(12466);const u="tabList__CuJ",d="tabItem_LNqP";function c(e){var t;const{lazy:n,block:i,defaultValue:c,values:m,groupId:f,className:h}=e,k=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,l.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===c?c:c??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==y&&!b.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:g}=(0,s.U)(),[w,O]=(0,o.useState)(y),C=[],{blockElementScrollPositionUntilNextRender:A}=(0,p.o5)();if(null!=f){const e=N[f];null!=e&&e!==w&&b.some((t=>t.value===e))&&O(e)}const T=e=>{const t=e.currentTarget,n=C.indexOf(t),a=b[n].value;a!==w&&(A(t),O(a),null!=f&&g(f,String(a)))},j=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=C.indexOf(e.currentTarget)+1;n=C[t]??C[0];break}case"ArrowLeft":{const t=C.indexOf(e.currentTarget)-1;n=C[t]??C[C.length-1];break}}null==(t=n)||t.focus()};return o.createElement("div",{className:(0,r.Z)("tabs-container",u)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},h)},b.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>C.push(e),onKeyDown:j,onFocus:T,onClick:T},i,{className:(0,r.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,o.cloneElement)(k.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function m(e){const t=(0,i.Z)();return o.createElement(c,(0,a.Z)({key:String(t)},e))}},59991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var a=n(83117),o=(n(67294),n(3905)),r=n(65488),i=n(85162);const l={sidebar_position:9,title:"Other Features"},s=void 0,p={unversionedId:"mutation/save-command/other",id:"mutation/save-command/other",title:"Other Features",description:"Save Command Result",source:"@site/docs/mutation/save-command/other.mdx",sourceDirName:"mutation/save-command",slug:"/mutation/save-command/other",permalink:"/jimmer-doc/docs/mutation/save-command/other",draft:!1,editUrl:"https://github.com/babyfish-ct/jimmer-doc/edit/main/docs/mutation/save-command/other.mdx",tags:[],version:"current",lastUpdatedAt:1729445762,formattedLastUpdatedAt:"Oct 20, 2024",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Other Features"},sidebar:"tutorialSidebar",previous:{title:"Optimistic/Pessimistic Lock",permalink:"/jimmer-doc/docs/mutation/save-command/lock"},next:{title:"Input DTO",permalink:"/jimmer-doc/docs/mutation/save-command/input-dto/"}},u={},d=[{value:"Save Command Result",id:"save-command-result",level:2}],c={toc:d};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"save-command-result"},"Save Command Result"),(0,o.kt)("p",null,"The result returned by a save command is an object, e.g. ",(0,o.kt)("inlineCode",{parentName:"p"},"SimpleSaveResult<E>/KSimpleSaveResult<E>")," for the ",(0,o.kt)("inlineCode",{parentName:"p"},"save")," method that saves a single object."),(0,o.kt)("p",null,"The result supports the following behaviors:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"originalEntity")," property: Returns the original parameter passed to the ",(0,o.kt)("inlineCode",{parentName:"p"},"save")," method by the developer.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"modifiedEntity")," property: A data structure identical in shape to ",(0,o.kt)("inlineCode",{parentName:"p"},"originalEntity"),", with the differences:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"If ",(0,o.kt)("inlineCode",{parentName:"p"},"originalEntity")," contains some objects without id properties that rely on id generation strategies ",(0,o.kt)("em",{parentName:"p"},"(e.g. auto increment, sequence, UUID, snowflake id etc.)"),", the corresponding objects in ",(0,o.kt)("inlineCode",{parentName:"p"},"modifiedEntity")," will necessarily have the id property set to the value automatically assigned by the database/application.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"If some objects belong to entity types with optimistic locking fields, the ",(0,o.kt)("inlineCode",{parentName:"p"},"version")," properties of the corresponding objects in ",(0,o.kt)("inlineCode",{parentName:"p"},"modifiedEntity")," will have the latest version number after modification."))),(0,o.kt)("admonition",{parentName:"li",type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("inlineCode",{parentName:"p"},"modifiedEntity")," is discussed many times in previous docs, so is not elaborated here."))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"totalAffectedRowCount")," property: The execution of a save command may modify multiple tables in the database. This property summarizes the total number of affected rows across all modified tables.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"getAffectedRowCountMap")," property: A map of affected tables and their affected row counts.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"getAffectedRowCount")," method, taking a parameter to get the affected row count of the specified table. Accepts two kinds of parameters:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Entity type: Gets affected row count of the table corresponding to this entity type.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Association property based on join table: Gets affected row count of the join table corresponding to this association property."))))),(0,o.kt)("p",null,"Let's look at some examples of the ",(0,o.kt)("inlineCode",{parentName:"p"},"totalAffectedRowCount")," property and ",(0,o.kt)("inlineCode",{parentName:"p"},"getAffectedRowCount")," method:"),(0,o.kt)(r.Z,{groupId:"language",mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"java",label:"Java",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-java"},'SimpleSaveResult<Book> result = sqlClient.update(\n        Immutables.createBook(draft -> {\n            draft.setId(3L);\n            draft.setPrice(new BigDecimal("59.9"));\n            draft.addIntoAuthors(author -> author.setId(1L));\n            draft.addIntoAuthors(author -> author.setId(3L));\n            draft.addIntoAuthors(author -> {\n                author.setId(1000L); // does not exist, created automatically\n                author.setFirstName("Svetlana");\n                author.setLastName("Isakova");\n                author.setGender(Gender.FEMALE);\n            });\n        })\n);\nSystem.out.println(\n    "Total affected row count: " + \n    // highlight-next-line\n    result.getTotalAffectedRowCount() \n);\nSystem.out.println(\n    "Affected row count for entity table BOOK: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Book.class)\n); \nSystem.out.println(\n    "Affected row count for entity table AUTHOR: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Author.class)\n);\nSystem.out.println(\n    "Affected row count for join table BOOK_AUTHOR_MAPPING: " +\n    // highlight-next-line\n    result.getAffectedRowCount(BookProps.AUTHORS) \n);\n'))),(0,o.kt)(i.Z,{value:"kotlin",label:"Kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val result = sqlClient.update(\n    new(Book::class).by {\n        id = 3L\n        price = BigDecimal("59.9"))\n        authors().addBy { id = 1L }\n        authors().addBy { id = 3L }\n        authors().addBy {\n            id = 1000L // does not exist, created automatically\n            firstName = "Svetlana"\n            lastName = "Isakova"\n            gender = Gender.FEMALE\n        }\n    }\n);\nprintln(\n    "Total affected row count: " +\n    // highlight-next-line\n    result.totalAffectedRowCount\n)\nprintln(\n    "Affected row count for entity table BOOK: " +\n    // highlight-next-line\n    result.getAffectedRowCount(Book::class)  \n)\nprintln(\n    "Affected row count for entity table AUTHOR: " + \n    // highlight-next-line\n    result.getAffectedRowCount(Author::class)\n)\nprintln(\n    "Affected row count for join table BOOK_AUTHOR_MAPPING: " +\n    // highlight-next-line  \n    result.getAffectedRowCount(Book::authors)\n)\n')))),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"The code ",(0,o.kt)("inlineCode",{parentName:"p"},"getAffectedRowCount(BookProps.AUTHORS)")," is equivalent to ",(0,o.kt)("inlineCode",{parentName:"p"},"getAffectedRowCount(AuthorProps.BOOKS)"))),(0,o.kt)("p",null,"The printed result is:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Total affected row count: 5\nAffected row count for entity table BOOK: 1  \nAffected row count for entity table AUTHOR: 1\nAffected row count for join table BOOK_AUTHOR_MAPPING: 3\n")),(0,o.kt)("p",null,"The explanation is:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The affected row count for table ",(0,o.kt)("inlineCode",{parentName:"p"},"BOOK")," is 1:"),(0,o.kt)("p",{parentName:"li"},"The ",(0,o.kt)("inlineCode",{parentName:"p"},"price")," of the aggregate root object ",(0,o.kt)("inlineCode",{parentName:"p"},"Book(id=3L)")," is modified.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The affected row count for table ",(0,o.kt)("inlineCode",{parentName:"p"},"AUTHOR")," is 1:"),(0,o.kt)("p",{parentName:"li"},"The associated object ",(0,o.kt)("inlineCode",{parentName:"p"},"Author(id=1000L)")," does not exist and is created automatically.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The affected row count for table ",(0,o.kt)("inlineCode",{parentName:"p"},"BOOK_AUTHOR_MAPPING")," is 3:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Dissociation between ",(0,o.kt)("inlineCode",{parentName:"p"},"Book(id=3L)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Author(id=2L)")," ",(0,o.kt)("em",{parentName:"p"},"(For dissociation operations on join tables, this is deleting the association)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"New association between ",(0,o.kt)("inlineCode",{parentName:"p"},"Book(id=3L)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Author(id=3L)"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"New association between ",(0,o.kt)("inlineCode",{parentName:"p"},"Book(id=3L)")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Author(id=1000L)"),"."))))))}m.isMDXComponent=!0}}]);